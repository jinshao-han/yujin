import{_ as s,c as n,o as a,a as p}from"./app.876eb61b.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"Webpack代理服务器","slug":"webpack代理服务器","link":"#webpack代理服务器","children":[]}],"relativePath":"front-end-engineering/Webpack代理服务器.md","lastUpdated":1679387290000}'),e={name:"front-end-engineering/Webpack代理服务器.md"},l=p(`<h3 id="webpack代理服务器" tabindex="-1">Webpack代理服务器 <a class="header-anchor" href="#webpack代理服务器" aria-hidden="true">#</a></h3><p>如果是开发时导致的跨域，最好的解决方法是设置代理服务器。现代开发基于Webpack</p><p>我们先简单提及一下<code>webpack-dev-server</code>这个插件的原理，本地启动了一个<strong>使用express的Http服务器</strong></p><p>并监听一个端口，这个本地服务器与客户端采用websocket通信协议，当原始文件发生改变，webpack-dev-server会实时编译。上线是请求实际的服务器，开发时是请求本地的服务器。</p><p>服务器不仅可以提供热更新的功能，<strong>还可以充当代理服务器</strong></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">devServer</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">proxy</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&#39;/api&#39;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;http://www.baidu.com/&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">changeOrigin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,     </span><span style="color:#7F848E;font-style:italic;">// target是域名的话，需要这个参数，</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">pathRewrite</span><span style="color:#ABB2BF;">: {</span><span style="color:#98C379;">&#39;^/api&#39;</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&#39;/api2&#39;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">          .....</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//...</span></span>
<span class="line"><span style="color:#B392F0;">  devServer</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    proxy</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#FFAB70;">&#39;/api&#39;</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">        target</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;http://www.baidu.com/&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">        changeOrigin</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;">     </span><span style="color:#6B737C;">// target是域名的话，需要这个参数，</span></span>
<span class="line"><span style="color:#B392F0;">        pathRewrite</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> {</span><span style="color:#FFAB70;">&#39;^/api&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;&#39;</span><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">      }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#FFAB70;">&#39;/api2&#39;</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">..</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li><p>&#39;/api&#39;和pathRewrite</p><p><code>&#39;/api&#39;</code>是捕获API的标志，如果API中有这个字符串，那么就开始匹配代理，比如API请求<code>/api/users</code>, 会被代理到请求 <a href="https://link.juejin.cn?target=http%3A%2F%2Fwww.baidu.com%2Fapi%2Fusers" title="http://www.baidu.com/api/users" target="_blank" rel="noreferrer">www.baidu.com/api/users</a> 。</p><p><code>pathRewrite</code>作用是把路径重写，也就是说会修改最终请求的API路径。比如访问的刚刚未设置<code>pathRewrite</code>的API路径：<code>http://www.baidu.com/api/users</code>,设置<code>pathRewrite: {&#39;^/api&#39; : &#39;&#39;},</code>后，最终代理访问的路径：<code>http://www.baidu.com/users</code>，这个参数的目的是给代理命名后，在访问时把命名删除掉。</p></li><li><p>target和changeOrigin</p><p>代理的API地址，就是需要跨域的API地址。地址可以是域名,如：<code>http://www.baidu.com</code>，也可以是IP地址：<code>http://127.0.0.1:3000</code>。如果是域名需要额外添加一个参数<code>changeOrigin: true</code>，否则会代理失败。</p></li></ul><p>Set-Cookie失效问题</p><ul><li><p>后台判断开发环境进行设置</p></li><li><p>更改根地址，加上<code>content</code></p></li><li><p>暴力处理Set-Cookie字段</p><p>上面的proxy设置中有 <code>option.cookiePathRewrite</code>和<code>option.cookieDomainRewrite</code>的选项，作用是重写Set-Cookie中的path和domain条件，还有一种更为暴力的方法，<code>proxy</code>可以直接对返回头进行处理</p></li></ul>`,9),o=[l];function c(r,t,i,B,y,F){return a(),n("div",null,o)}const u=s(e,[["render",c]]);export{b as __pageData,u as default};
