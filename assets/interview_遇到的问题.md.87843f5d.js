import{_ as e,c as t,o as a,a as i}from"./app.a78b92bc.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"遇到的问题","slug":"遇到的问题","link":"#遇到的问题","children":[]}],"relativePath":"interview/遇到的问题.md","lastUpdated":1679387290000}'),_={name:"interview/遇到的问题.md"},l=i('<h3 id="遇到的问题" tabindex="-1">遇到的问题 <a class="header-anchor" href="#遇到的问题" aria-hidden="true">#</a></h3><ul><li><p>比如会不小心把测试环境的接口代码发到正式环境去，是不是可以写一个命令行切换工具，一键切换环境变量注入代码，同时在推主分支的时候，自动加一个钩子做一个自动校验，只要发现有 Test 的配置项未经修正，就阻止这次提交，直接报错出来。</p></li><li><p>比如后端的接口老是提供的很慢，让自己画页面的时候很多状态都得本地硬改代码去调试弹窗行为，是不是可以写一个 Chrome 插件去拦截代理特定的接口，包括去模拟登陆状态，做页面上的一键模拟、切换和配置，甚至是可以在本地的页面中，去代理线上的接口，去复现一些问题。</p></li><li><p>比如每次的代码合并，每个人测试完后交给另外一个人，可能由于环境的问题导致他本地打包上线后代码又出问题，是不是可以做一个内网的打包平台，由它来模拟和执行所有人的测试中的打包任务，保证推到线上的代码一定是与测试环境保持一致。</p></li><li><p>比如设计师传稿子来回变动，是不是可以做一个设计稿的演示平台，来管理他们提交的所有设计稿的版本，从而保证自己拿到的是最新的，且每一次改动和上传都是可以回溯的。</p></li><li><p>比如很多中后台长的差不多，是不是可以抽象出一些后台的页面骨架，甚至封装出特定类型下的后台框架，把脚手架、必要的配置、常用的中间件、组件库都封装进去，下次再启新项目，一键生成。</p></li></ul>',2),r=[l];function s(n,o,c,p,d,h){return a(),t("div",null,r)}const f=e(_,[["render",s]]);export{u as __pageData,f as default};
